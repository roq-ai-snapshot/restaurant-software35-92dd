generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model feedbacks {
  id            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id   String?      @db.Uuid
  restaurant_id String?      @db.Uuid
  rating        Int
  review        String?
  created_at    DateTime     @db.Timestamp(6)
  users         users?       @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  restaurants   restaurants? @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu_items {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  menu_id     String?       @db.Uuid
  name        String        @db.VarChar(255)
  description String?
  price       Int
  image_url   String?       @db.VarChar(255)
  menus       menus?        @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_items order_items[]
}

model menus {
  id            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  restaurant_id String?      @db.Uuid
  name          String       @db.VarChar(255)
  menu_items    menu_items[]
  restaurants   restaurants? @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model order_items {
  id           String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id     String?     @db.Uuid
  menu_item_id String?     @db.Uuid
  quantity     Int
  price        Int
  menu_items   menu_items? @relation(fields: [menu_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders       orders?     @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id            String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id   String?       @db.Uuid
  restaurant_id String?       @db.Uuid
  status        String        @db.VarChar(255)
  total_price   Int
  created_at    DateTime      @db.Timestamp(6)
  updated_at    DateTime      @db.Timestamp(6)
  order_items   order_items[]
  users         users?        @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  restaurants   restaurants?  @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reservations {
  id            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id   String?      @db.Uuid
  restaurant_id String?      @db.Uuid
  date          DateTime     @db.Timestamp(6)
  time          DateTime     @db.Timestamp(6)
  party_size    Int
  created_at    DateTime     @db.Timestamp(6)
  updated_at    DateTime     @db.Timestamp(6)
  users         users?       @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  restaurants   restaurants? @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurants {
  id              String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  owner_id        String?        @db.Uuid
  name            String         @db.VarChar(255)
  location        String         @db.VarChar(255)
  contact_details String         @db.VarChar(255)
  operating_hours String         @db.VarChar(255)
  feedbacks       feedbacks[]
  menus           menus[]
  orders          orders[]
  reservations    reservations[]
  users           users?         @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  role         String         @db.VarChar(255)
  name         String         @db.VarChar(255)
  email        String         @unique @db.VarChar(255)
  password     String         @db.VarChar(255)
  feedbacks    feedbacks[]
  orders       orders[]
  reservations reservations[]
  restaurants  restaurants[]
}
